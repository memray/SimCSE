import logging

data_pipelines = {
    'contriever-256': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
    },
    'contriever-Q128D512-prompt': {
        'max_context_len': 512,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.5,
        'max_d_len': 1.0,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.0,
    },
    'fulllength': {
        'max_context_len': 0,
        'min_dq_len': 1,
        'min_q_len': 1.0,
        'max_q_len': 1.0,
        'min_d_len': 1.0,
        'max_d_len': 1.0,
        'word_del_ratio': 0.0,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 0.0,
        'title_as_query_ratio': 0.0,
    },
    'fulllength-prompt': {
        'max_context_len': 0,
        'min_dq_len': 1,
        'min_q_len': 1.0,
        'max_q_len': 1.0,
        'min_d_len': 1.0,
        'max_d_len': 1.0,
        'word_del_ratio': 0.0,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.0,
    },
    'contriever-256-prompt': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.0,
    },
    'contriever-256-prompt50%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 0.5,
        'title_as_query_ratio': 0.0,
    },
    'contriever-256-prompt50%-Qtitle50%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 0.5,
        'title_as_query_ratio': 0.5,
    },
    'contriever-256-prompt-Qtitle25%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.25,
    },
    'contriever-256-prompt-Qtitle50%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.5,
    },
    'contriever-256-Qtitle50%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 0.0,
        'title_as_query_ratio': 0.5,
    },
    'contriever-256-prompt-Qtitle75%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.75,
    },
    'contriever-256-prompt-Qtitle100%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 1.0,
    },
    'contriever-256-Qtitle100%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 0.0,
        'title_as_query_ratio': 1.0,
    },
    'contriever-512-prompt-Qtitle100%': {
        'max_context_len': 512,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 1.0,
    },
    'contriever-512-prompt-Qtitle50%': {
        'max_context_len': 512,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.5,
    },
    'contriever-256-prompt-QinD10%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.1,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.0,
    },
    'contriever-256-prompt-QinD50%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.5,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.5,
        'include_title_ratio': 1.0,
    },
    'contriever-256-prompt-Qtitle50%-del20%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.5,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.2,
        'query_in_doc': 0.0,
        'include_title_ratio': 1.0,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.5,
    },
    'ctx256-q30%d50%-prompt-Qtitle50%': {
        'max_context_len': 256,
        'min_dq_len': 8,
        'min_q_len': 0.05,
        'max_q_len': 0.3,
        'min_d_len': 0.05,
        'max_d_len': 0.5,
        'word_del_ratio': 0.1,
        'query_in_doc': 0.5,
        'dq_prompt_ratio': 1.0,
        'title_as_query_ratio': 0.5,
        'include_title_ratio': 1.0,
    },
}

def load_data_config(training_args, hftraining_args):
    logger = logging.getLogger(__name__)
    # prepare for data loader
    if training_args.data_pipeline_name:
        data_prep_config = data_pipelines[training_args.data_pipeline_name]
        if hftraining_args.local_rank == 0 or hftraining_args.local_rank == -1:
            logger.info('Using pre-defined data pipeline: ' + str(training_args.data_pipeline_name))
    else:
        data_prep_config = {
            'max_context_len': training_args.max_context_len,
            'min_dq_len': training_args.min_dq_len,
            'min_q_len': training_args.min_q_len,
            'max_q_len': training_args.max_q_tokens,
            'min_d_len': training_args.min_d_len,
            'max_d_len': training_args.max_d_len,
            'word_del_ratio': training_args.word_del_ratio,
            'query_in_doc': training_args.query_in_doc,
            'include_title_ratio': training_args.include_title_ratio,
            'dq_prompt_ratio': training_args.dq_prompt_ratio,
            'title_as_query_ratio': training_args.title_as_query_ratio,
        }
    if hftraining_args.local_rank == 0 or hftraining_args.local_rank == -1:
        logger.info('Data loading parameters:')
        for k, v in data_prep_config.items():
            setattr(training_args, k, v)
            logger.info(f'\t\t{k} = {v}')

    return data_prep_config

